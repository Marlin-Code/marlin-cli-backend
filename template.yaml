# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html
AWSTemplateFormatVersion: 2010-09-09
Description: This is a serverless-api definition. The lambdas and trigger events are
  explicitly defined, and the API Gateway is implicitly defined by AWS upon deployment. 

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform: AWS::Serverless-2016-10-31

# These are imported into each definition in the template
Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 100
    MemorySize: 128
    Architectures:
      - x86_64

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: helloWorld.mjs
  getArchetypeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-archetype-function
      Handler: src/handlers/archetypes.getArchetypeHandler
      Description: Endpoint for fetching an archetype based on name
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: 'arn:aws:secretsmanager:us-east-1:605725488159:secret:AIRTABLE_API_KEY-RJo4kq'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /archetypes/{name}
            Method: GET
  listArchetypesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: list-archetyes-function
      Handler: src/handlers/archetypes.listArchetypesHandler
      Description: Endpoint for fetching the available archetypes
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: 'arn:aws:secretsmanager:us-east-1:605725488159:secret:AIRTABLE_API_KEY-RJo4kq'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /archetypes/available
            Method: GET
  getModuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-module-function
      Handler: src/handlers/modules.getModuleHandler
      Description: Endpoint for fetching an module based on name
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: 'arn:aws:secretsmanager:us-east-1:605725488159:secret:AIRTABLE_API_KEY-RJo4kq'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /modules/{name}
            Method: GET
  listModulesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: list-modules-function
      Handler: src/handlers/modules.listModulesHandler
      Description: Endpoint for fetching the available modules 
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: 'arn:aws:secretsmanager:us-east-1:605725488159:secret:AIRTABLE_API_KEY-RJo4kq'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /modules/available
            Method: GET

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
